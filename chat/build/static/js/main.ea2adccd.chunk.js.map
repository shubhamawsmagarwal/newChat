{"version":3,"sources":["Room.js","Chat.js","User.js","App.js","serviceWorker.js","index.js"],"names":["Room","className","onSubmit","event","preventDefault","createRoom","value","props","type","ref","input","placeholder","required","joinRoom","Component","Chat","onlineUsers","this","map","user","index","key","messages","msg","username","time","onClick","leaveRoom","room","send","autoComplete","User","checkUsername","App","ws","WebSocket","state","status","loading","url","bind","onopen","evt","setState","onclose","onmessage","mess","JSON","parse","data","action","users","flag","axios","get","params","then","res","length","catch","err","console","log","response","alert","stringify","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ea2adccd.chunk.js","sourcesContent":["import React,{ Component } from 'react';\nclass Room extends Component{\n    render(){\n        return(\n            <div className=\"join-container\">\n        \t\t<header className=\"join-header\">\n        \t\t\t<h1>ChatApp</h1>\n        \t\t</header>\n        \t\t<main className=\"join-main\">\n        \t\t\t<form onSubmit={(event) => {\n                            event.preventDefault();\n                            const createRoom = this.createRoom.value;\n                            this.props.createRoom(createRoom);\n                    }}>\n        \t\t\t\t<div className=\"form-control\">\n        \t\t\t\t\t<label>Create Room</label>\n        \t\t\t\t\t<input\n        \t\t\t\t\t\ttype=\"text\"\n        \t\t\t\t\t\tref={(input) => { this.createRoom = input }}\n        \t\t\t\t\t\tplaceholder=\"Enter room name...\"\n        \t\t\t\t\t\trequired\n        \t\t\t\t\t/>\n        \t\t\t\t</div>\n        \t\t\t\t<button type=\"submit\" className=\"btn\">Create Room</button>\n        \t\t\t</form>\n        \t\t\t<form onSubmit={(event) => {\n                            event.preventDefault();\n                            const joinRoom = this.joinRoom.value;\n                            this.props.joinRoom(joinRoom);\n                    }}>\n        \t\t\t\t<div className=\"form-control\">\n        \t\t\t\t\t<label>Join Room</label>\n        \t\t\t\t\t<input\n        \t\t\t\t\t\ttype=\"text\"\n        \t\t\t\t\t\tref={(input) => { this.joinRoom = input }}\n        \t\t\t\t\t\tplaceholder=\"Enter room name...\"\n        \t\t\t\t\t\trequired\n        \t\t\t\t\t/>\n        \t\t\t\t</div>\n        \t\t\t\t<button type=\"submit\" className=\"btn\">Join Room</button>\n        \t\t\t</form>\n        \t\t</main>\n\t\t    </div>\n        );\n    }\n}\nexport default Room;","import React,{ Component } from 'react';\nclass Chat extends Component{\n    render(){\n        const onlineUsers=this.props.onlineUsers.map((user,index)=>(\n            <li key={index}>{user}</li>\n        ));\n        const messages=this.props.messages.map((msg,index)=>(\n            <div className=\"message\" key={index}>\n  \t\t\t\t\t\t<p className=\"meta\">{msg.username+\"   \"}<span>{msg.time}</span></p>\n  \t\t\t\t\t\t<p>{msg.msg}</p>\n          \t</div>\n        ));\n        return(\n            <div className=\"chat-container\">\n                <header className=\"chat-header\">\n                  <h1>ChatApp</h1>\n                  <button onClick={(event) => {\n                            event.preventDefault()\n                            this.props.leaveRoom();}} \n                          className=\"btn\">Leave Room</button>\n                </header>\n                <main className=\"chat-main\">\n                  <div className=\"chat-sidebar\">\n                    <h2>{this.props.user}</h2>\n                    <h3>Room Name:</h3>\n                    <h2>{this.props.room}</h2>\n                    <h3>Online Users</h3>\n                    <ul>{onlineUsers}</ul>\n                  </div>\n                  <div className=\"chat-messages\">{messages}</div>\n                </main>\n                <div className=\"chat-form-container\">\n                  <form onSubmit={(event) => {\n                            event.preventDefault()\n                            const msg = this.msg.value;\n                            this.props.send(msg,this.props.user);\n                  }}>\n                    <input\n                      type=\"text\"\n                      ref={(input) => { this.msg = input }}\n                      placeholder=\"Enter Message\"\n                      required\n                      autoComplete=\"off\"\n                    />\n                    <button type=\"submit\" className=\"btn\">Send</button>\n                  </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Chat;","import React,{ Component } from 'react';\nclass User extends Component{\n    render(){\n        return(\n            <div className=\"join-container\">\n        \t\t<header className=\"join-header\">\n        \t\t\t<h1>ChatApp</h1>\n        \t\t</header>\n        \t\t<main className=\"join-main\">\n        \t\t\t<form onSubmit={(event) => {\n                            event.preventDefault();\n                            const user = this.user.value;\n                            this.props.checkUsername(user);\n                    }}>\n        \t\t\t\t<div className=\"form-control\">\n        \t\t\t\t\t<label>Username</label>\n        \t\t\t\t\t<input\n        \t\t\t\t\t\ttype=\"text\"\n        \t\t\t\t\t\tref={(input) => { this.user = input }}\n        \t\t\t\t\t\tplaceholder=\"Choose a username...\"\n        \t\t\t\t\t\trequired\n        \t\t\t\t\t/>\n        \t\t\t\t</div>\n        \t\t\t\t<button type=\"submit\" className=\"btn\">Next</button>\n        \t\t\t</form>\n        \t\t</main>\n\t\t    </div>\n        );\n    }\n}\nexport default User;","import React,{ Component } from 'react';\nimport axios from 'axios';\nimport Room from './Room';\nimport Chat from './Chat';\nimport User from './User';\nclass App extends Component{\n  ws = new WebSocket(\"wss://mnccesorvk.execute-api.us-east-1.amazonaws.com/a\");\n  componentDidMount() {\n     this.ws.onopen = evt => {\n      this.setState({loading:false});\n    };\n    this.ws.onclose = () => {\n    };\n    this.ws.onmessage = evt => {\n      const mess=JSON.parse(evt.data);\n      if(mess.action==='disconnect'){\n        const msg=`${mess.username} leaves chat`;\n        this.setState({onlineUsers:mess.users,messages:[...this.state.messages,{username:\"\",msg:msg,time:mess.time}]});\n      }else if(mess.action==='add'){\n        const msg=`${mess.username} joins chat`;\n        this.setState({onlineUsers:mess.users,messages:[...this.state.messages,{username:\"\",msg:msg,time:mess.time}]});\n      }else if(mess.action==='send'){\n        this.setState({messages:[...this.state.messages,{username:mess.username,msg:mess.msg,time:mess.time}]});\n      }\n    };\n  }\n  constructor(props){\n    super(props);\n    this.state={\n      user:\"\",\n      status:0,\n      room:\"\",\n      loading:true,\n      onlineUsers:[],\n      messages:[],\n      url:\"https://4l8zeclpe0.execute-api.us-east-1.amazonaws.com/a\"\n    };\n    this.checkUsername=this.checkUsername.bind(this);\n    this.createRoom=this.createRoom.bind(this);\n    this.joinRoom=this.joinRoom.bind(this);\n    this.leaveRoom=this.leaveRoom.bind(this);\n    this.send=this.send.bind(this);\n  }\n  async checkUsername(user){\n    var flag=true;\n    if(user==='user')\n      flag=false;\n    await axios.get(this.state.url+'/checkusername', {params:{username:user}}).then(res => {if(res.data.length>0){flag=false;}}).catch(err=>{console.log(err.response)});\n    if(flag){\n      this.setState({user:user,status:1});\n    }else{\n      alert(\"Username not available\");\n    }\n  } \n  async createRoom(room){\n    var flag=true;\n    if(room==='Default')\n      flag=false;\n    await axios.get(this.state.url+'/checkroom', {params:{room:room}}).then(res => {if(res.data.length>0){flag=false;}}).catch(err=>{console.log(err.response)});\n    if(flag){\n      this.setState({loading:true,room:room});\n      const user=this.state.user;\n      await this.ws.send(JSON.stringify({action: 'add',user:user,room:room}));\n      this.setState({loading:false,status:2});\n    }else{\n      alert(\"Room not available\");\n    }\n  }\n  async joinRoom(room){\n    var flag=true;\n    if(room==='Default')\n      flag=false;\n    await axios.get(this.state.url+'/checkroom', {params:{room:room}}).then(res => {if(res.data.length===0){flag=false;}}).catch(err=>{console.log(err.response)});\n    if(flag){\n      this.setState({loading:true,room:room});\n      const user=this.state.user;\n      await this.ws.send(JSON.stringify({action: 'add',user:user,room:room}));\n      this.setState({loading:false,status:2});\n    }else{\n      alert(\"No such room exists\");\n    }\n  }\n  async leaveRoom(){\n    this.setState({loading:true,status:1,room:\"\",onlineUsers:[],messages:[]});\n    await this.ws.send(JSON.stringify({action:'leave'}));\n    this.setState({loading:false});\n  }\n  async send(msg,user){\n    this.setState({loading:true});\n    await this.ws.send(JSON.stringify({action: 'send',msg:msg,user:user}));\n    this.setState({loading:false});\n  } \n  render(){\n    if(this.state.loading)\n      return(<div>Loading...</div>);\n    else\n      return(\n        <div>\n          {(this.state.status===0)\n          ?<User checkUsername={this.checkUsername}/>\n          :(this.state.status===1)\n          ?<Room joinRoom={this.joinRoom} createRoom={this.createRoom}/>\n          :<Chat send={this.send} leaveRoom={this.leaveRoom} user={this.state.user} room={this.state.room} messages={this.state.messages} onlineUsers={this.state.onlineUsers}/> \n          }\n        </div>\n      );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}